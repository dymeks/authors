{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/display-quotes/display-quotes.component.css","webpack:///./src/app/display-quotes/display-quotes.component.html","webpack:///./src/app/display-quotes/display-quotes.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NewComponent } from './new/new.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { DisplayQuotesComponent } from './display-quotes/display-quotes.component';\r\n\r\nconst routes: Routes = [\r\n    {path: 'home',component:HomeComponent},\r\n    {path: 'new',component:NewComponent},\r\n    {path: 'edit/:id',component:EditComponent},\r\n    {path: 'authors/:id/quotes',component:DisplayQuotesComponent},\r\n    {path: '**',component:HomeComponent},\r\n    \r\n];\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forRoot(routes)],\r\n    exports:[RouterModule]\r\n})\r\nexport class AppRoutingModule {}","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <h1>Favorite Authors</h1>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { HttpService } from './http.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DisplayQuotesComponent } from './display-quotes/display-quotes.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NewComponent,\n    EditComponent,\n    DisplayQuotesComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div>\\n    <a href=\\\"/home\\\">Home</a>\\n  <h1>All Quotes from {{author.name}}</h1>\\n  <p>Add a Quote:</p>\\n  <form (submit)=\\\"newQuote()\\\" action=\\\"\\\">\\n    <input type=\\\"text\\\" name=\\\"Quote.quote\\\" [(ngModel)]=\\\"Quote.quote\\\" required minlength='3' #quote1=\\\"ngModel\\\">\\n    <button [disabled]= \\\"!quote1.valid\\\" type=\\\"submit\\\">Submit</button>\\n   \\n  </form>\\n  \\n  <div *ngIf=\\\"!quote1.valid\\\">\\n      <div *ngIf=\\\"quote1.errors.required\\\">\\n        This field is required!\\n      </div>\\n      <div *ngIf=\\\"quote1.errors.minlength\\\">\\n        The quote must be at least 3 letters.\\n      </div>\\n    </div>\\n  \\n  <ul>\\n    <li *ngFor=\\\"let quote of author.quotes\\\">{{quote.quote}}</li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-display-quotes',\n  templateUrl: './display-quotes.component.html',\n  styleUrls: ['./display-quotes.component.css']\n})\nexport class DisplayQuotesComponent implements OnInit {\n  authorId;\n  author;\n  Quote;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.author = {name:\"\"}\n    this.Quote = {quote:\"\"}\n    this._route.params.subscribe((params: Params) => this.authorId = params['id']);\n    this.findAuthor();\n  }\n\n  findAuthor(){\n    let observable = this._httpService.findAuthor(this.authorId);\n    observable.subscribe(data => {\n      console.log(data)\n      if(data['status']){\n        this.author = data['author'];\n        console.log(this.author);\n      } else {\n        \n        console.log(this.author);\n      }\n    })\n  }\n\n  newQuote(){\n    let observable = this._httpService.createQuote(this.authorId,this.Quote);\n    observable.subscribe(data =>{\n      if(data['status']){\n        this._router.navigate(['/authors/'+this.authorId+'/quotes']);\n        \n      }\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <a href=\\\"/home\\\">Home</a>\\n    <h1>Edit this author:</h1>\\n    <form (submit)=\\\"submitUpdateAuthor()\\\" action=\\\"\\\">\\n      <label for=\\\"\\\">Name</label>\\n      <input type=\\\"text\\\" name=\\\"currentAuthor.name\\\" required minlength=\\\"3\\\" #author=\\\"ngModel\\\" [(ngModel)]=\\\"currentAuthor.name\\\" placeholder=\\\"currentAuthor.name\\\">\\n      <button type=\\\"submit\\\" [disabled]= \\\"!author.valid\\\">Submit</button>\\n    </form>\\n    <div *ngIf=\\\"!author.valid\\\">\\n      <div *ngIf=\\\"author.errors.required\\\">\\n        This field is required!\\n      </div>\\n      <div *ngIf=\\\"author.errors.minlength\\\">\\n        The name must be at least 3 letters.\\n      </div>\\n    </div>\\n    \\n    <a href=\\\"/home\\\"><button>Cancel</button></a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  currentAuthor;\n  authorId;\n  errors;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => this.authorId = params['id']);\n    this.currentAuthor = {name:\"\"}\n    this.findAuthor();\n  }\n\n  findAuthor(){\n    let observable = this._httpService.findAuthor(this.authorId);\n    observable.subscribe(data => {\n      console.log(data);\n      if(!data['status']){\n        this.errors = data['body'];\n      } else {\n        this.currentAuthor = data['author'];\n      }\n    })\n  }\n\n  submitUpdateAuthor(){\n    let observable = this._httpService.updateAuthor(this.authorId,this.currentAuthor);\n    observable.subscribe(data => {\n      console.log(data);\n      if(!data['status']){\n        this.errors = data['body'];\n      } else {\n        this._router.navigate(['/home']);\n      }\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <a href=\\\"/new\\\">Add an author</a>\\n  <p>We have quotes by:</p>\\n  <table *ngIf=\\\"allAuthors\\\">\\n    <thead>\\n      <th>Author</th>\\n      <th>Actions Availible</th>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let author of allAuthors\\\">\\n        <td>{{author.name}}</td>\\n        <td>\\n          <button [routerLink]=\\\"['/edit/',author._id]\\\">Edit</button>\\n          <button (click)=\\\"showQuotes(author._id)\\\">See Quotes</button>\\n          <button (click)=\\\"deleteAuthor(author._id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  allAuthors;\n  errors:any;\n\n  constructor(\n    private _httpService: HttpService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getAllAuthors();\n  }\n\n  getAllAuthors(){\n    let observable = this._httpService.getAllAuthors();\n    observable.subscribe(data => {\n      console.log(data);\n      if(data['status']){\n        this.allAuthors = data['authors'];\n      } else {\n        this.errors = data['body'];\n      }\n      // this.allAuthors = data;\n    })\n  }\n\n  deleteAuthor(authorId){\n    let observable = this._httpService.deleteAuthor(authorId);\n    observable.subscribe(data => {\n      if(!data['status']){\n        this.errors = data['body'];\n      }\n      this._router.navigate(['/home']);\n    })\n  }\n\n  showQuotes(authorId){\n    // let observable = this._httpService.findAuthor(author._id);\n    // observable.subscribe(data => {\n    //   if(data['status']){\n    //     this._router.navigate(['/authors/'+author._id+'/quotes']);\n    //   } else {\n\n    //   }\n    // })\n    this._router.navigate(['/authors/'+authorId+'/quotes']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n\n  getAllAuthors(){\n    return this._http.get('/authors');\n  }\n\n  deleteAuthor(authorId) {\n    return this._http.delete('/authors/'+authorId);\n  }\n\n  createAuthor(newAuthor){\n    return this._http.post('/authors',newAuthor);\n  }\n\n  findAuthor(authorId){\n    return this._http.get('/authors/'+authorId);\n  }\n\n  updateAuthor(authorId,currentAuthor){\n    return this._http.put('/authors/'+authorId,currentAuthor);\n  }\n\n  createQuote(authorId,quote){\n    return this._http.post('/quotes/'+ authorId,quote);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <a href=\\\"/home\\\">Home</a>\\n  <h1>Add a new author:</h1>\\n  <p *ngIf=\\\"errors\\\">\\n    {{errors}}\\n  </p>\\n  <form (submit)=\\\"submitNewAuthor()\\\" action=\\\"\\\">\\n    <label for=\\\"\\\">Name</label>\\n    \\n    <input type=\\\"text\\\" name=\\\"newAuthor.name\\\" required minlength=\\\"3\\\" #author=\\\"ngModel\\\" [(ngModel)]=\\\"newAuthor.name\\\">\\n    <span *ngIf=\\\"author.errors\\\"></span>\\n    <button type=\\\"submit\\\" [disabled]= \\\"!author.valid\\\">Submit</button>\\n  </form>\\n  <div *ngIf=\\\"!author.valid\\\">\\n    <div *ngIf=\\\"author.errors.required\\\">\\n      This field is required!\\n    </div>\\n    <div *ngIf=\\\"author.errors.minlength\\\">\\n      The name must be at least 3 letters.\\n    </div>\\n  </div>\\n  <a href=\\\"/home\\\"><button>Cancel</button></a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  newAuthor:any;\n  author;\n  errors;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.newAuthor = {name:\"\"}\n  }\n\n  submitNewAuthor(){\n    let observable = this._httpService.createAuthor(this.newAuthor);\n    observable.subscribe(data => {\n      if(!data['status']){\n        this.errors= data['body'];\n      }\n      this._router.navigate(['/home']);\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}